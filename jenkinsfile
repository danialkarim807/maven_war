pipeline {
    agent any
    environment {

        dockerImage = 'dan'
        registry = 'danialkarim807/tomcatesamplewebapp'
        BUILD_NUMBER = "2"

    }
    stages {
        stage('Build Application') {
            steps {
                sh 'mvn -f pom.xml clean package'
            }
            post {
                success {
                    echo "Archiving the artifacts..."
                    archiveArtifacts artifacts: '**/*.war'
                }
            }
        }
        // stage ('root pass') {
        //     steps {
        //         script {
        //         sh "sudo su ${rootPass}"
        //         }
        //     }
        // }
                stage('Build and Push Docker Image') {
            steps {
                script {
                    // Define your Docker image name and tag
                    def dockerImage = "${registry}:${BUILD_NUMBER}"

                    // Build the Docker image using the Dockerfile in your project
                    sh "docker build -t ${dockerImage} ."

                    // Push the Docker image to your Docker registry
                    // sh "docker push ${dockerImage}"
                }
            }
        }
        
        // Add more stages as needed...

    // stage('Run Python Script') {
    //         steps {
    //             // Install python-dotenv package if not already installed
    //             sh 'sudo apt install python3'  // Check Python version
                
    //             sh 'python --version'  // Check Python version
    //             sh 'pip --version'     // Check pip version
    //             sh 'apt install python3-pip'
    //             sh 'pip install python-dotenv'

    //             // Run the Python script
    //             sh """
    //             python - <<EOF
    //             import os
    //             from dotenv import load_dotenv

    //             # Load environment variables from .env file
    //             load_dotenv()

    //             # Access the variables
    //             docker login
    //             username = os.getenv("name")
    //             pass = os.getenv("password")
    //             # debug_mode = os.getenv("DEBUG")

    //             print(f"Database URL: {database_url}")
    //             print(f"API Key: {api_key}")
    //             print(f"Debug Mode: {debug_mode}")
    //             EOF
    //             """
    //         }
    //     }



        // stage('Create Tomcat Docker Image') {
        //     steps {
                
        //         sh 'docker build . -t tomcatesamplewebapp'
                
        //     }
        // }



        // Uncomment and modify these stages as needed
        /*
        stage('Deploy in Staging Environment') {
            steps {
                build job: 'Deploy_application_staging_env'
            }
        }

        stage('Deploy to Production Environment') {
            steps {
                script {
                    timeout(time: 5, unit: 'DAYS') {
                        input message: 'Approve PRODUCTION Deployment?'
                    }
                }
                build job: 'Deploy_Application_staging_env_to_production'
            }
        }
        */
    }
}


